version: "3.9"

services:
    db:
        image: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=drones
            - POSTGRES_PASSWORD=drones
            - POSTGRES_DB=drones
        container_name: drones_db

    app:
        build:
            context: ./
            dockerfile: Dockerfile
        restart: always
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - ./:/usr/src/
        ports:
            - 8000:8000
        env_file:
            - ./.env
        depends_on:
            - db
        container_name: drones

    redis:
        image: redis
        ports:
            - "6379:6379"
        container_name: drones_redis

    celery_worker:
        restart: always
        build:
            context: ./
        command: celery -A config worker --loglevel=info --logfile=logs/celery.log
        volumes:
            - ./:/usr/src/
        env_file:
            - ./.env
        depends_on:
            - db
            - redis
            - app
        container_name: drones_celery_worker

    celery-beat:
        build: ./
        command: celery -A config beat -l info
        volumes:
            - ./:/usr/src/
        env_file:
            - ./.env
        depends_on:
            - db
            - redis
            - app
        container_name: drones_celery_beat

    flower:
        build:
            context: ./
        command: celery -A config flower  --broker=redis://host.docker.internal:6379//
        ports:
            - 5555:5555
        env_file:
            - ./.env
        depends_on:
            - db
            - app
            - redis
            - celery_worker
        container_name: drones_flower

volumes:
    postgres_data:
